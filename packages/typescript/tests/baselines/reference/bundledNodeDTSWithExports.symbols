=== tests/cases/conformance/declarationEmit/index.ts ===
export {}
No type information for this code.
No type information for this code.=== tests/cases/conformance/declarationEmit/nested/base.ts ===
import { C } from "./";
>C : Symbol(C, Decl(base.ts, 0, 8))

export function f() {
>f : Symbol(f, Decl(base.ts, 0, 23))

    return new C();
>C : Symbol(C, Decl(base.ts, 0, 8))
}

=== tests/cases/conformance/declarationEmit/nested/derived.ts ===
import { f } from "./base";
>f : Symbol(f, Decl(derived.ts, 0, 8))

export function g() {
>g : Symbol(g, Decl(derived.ts, 0, 27))

    return f();
>f : Symbol(f, Decl(derived.ts, 0, 8))
}

=== tests/cases/conformance/declarationEmit/nested/index.ts ===
export * from "./base";
export * from "./derived";
export class C {}
>C : Symbol(C, Decl(index.ts, 1, 26))

