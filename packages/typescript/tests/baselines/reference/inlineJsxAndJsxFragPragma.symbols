=== tests/cases/conformance/jsx/inline/renderer.d.ts ===
declare global {
>global : Symbol(global, Decl(renderer.d.ts, 0, 0))

    namespace JSX {
>JSX : Symbol(JSX, Decl(renderer.d.ts, 0, 16))

        interface IntrinsicElements {
>IntrinsicElements : Symbol(IntrinsicElements, Decl(renderer.d.ts, 1, 19))

            [e: string]: any;
>e : Symbol(e, Decl(renderer.d.ts, 3, 13))
        }
    }
}
export function h(): void;
>h : Symbol(h, Decl(renderer.d.ts, 6, 1))

export function jsx(): void;
>jsx : Symbol(jsx, Decl(renderer.d.ts, 7, 26))

export function Fragment(): void;
>Fragment : Symbol(Fragment, Decl(renderer.d.ts, 8, 28))

=== tests/cases/conformance/jsx/inline/preacty.tsx ===
/**
 * @jsx h
 * @jsxFrag Fragment
 */
import {h, Fragment} from "./renderer";
>h : Symbol(h, Decl(preacty.tsx, 4, 8))
>Fragment : Symbol(Fragment, Decl(preacty.tsx, 4, 10))

<><div></div></>
>div : Symbol(JSX.IntrinsicElements, Decl(renderer.d.ts, 1, 19))
>div : Symbol(JSX.IntrinsicElements, Decl(renderer.d.ts, 1, 19))

=== tests/cases/conformance/jsx/inline/snabbdomy.tsx ===
/* @jsx jsx */
/* @jsxfrag null */
import {jsx} from "./renderer";
>jsx : Symbol(jsx, Decl(snabbdomy.tsx, 2, 8))

<><span></span></>
>span : Symbol(JSX.IntrinsicElements, Decl(renderer.d.ts, 1, 19))
>span : Symbol(JSX.IntrinsicElements, Decl(renderer.d.ts, 1, 19))

